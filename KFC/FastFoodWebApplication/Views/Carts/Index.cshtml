@using System.Globalization;
@model IEnumerable<KFCApplication.Models.Cart>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var sizes = new[] { new { Value = "S", Text = "S" },
    new { Value = "M", Text = "M" }, new { Value = "L", Text = "L" } };
}
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <link rel="shortcut icon" href="images/favicon.png" type="">
    <title> Feane </title>
    <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css" integrity="sha512-CruCP+TD3yXzlvvijET8wV5WxxEh5H8P4cmz0RFbKK6FlZ2sYl3AEsKlLPHbniXKSrDdFewhbmBK5skbdsASbQ==" crossorigin="anonymous" />
    <link href="/css/font-awesome.min.css" rel="stylesheet" />
    <link href="/css/style.css" rel="stylesheet" />
    <link href="/css/responsive.css" rel="stylesheet" />
</head>
<div class="container cart-container" style="border-radius: 10px; padding: 20px; background-color: #f8f9fa;">
    <h2 style="text-align: center; font-family: Arial, Helvetica, sans-serif; color: darkred">CART</h2>
    <table class="table">
        <thead style="background-color: darkred; color:white">
            <tr>
                <th></th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Size</th>
                <th>Sub Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @{
                decimal total = 0;
                var totalFormat = string.Format(new CultureInfo("vi-VN"), "{0:C}", total);
            }
            @foreach (var item in Model)
            {
                total += item.Price;

                var image = "/images/soldout.png";
                if (item.Dish.DishImage != null)
                {
                    string img = item.Dish.DishImage.Replace("\\", "/");
                    image = "/" + img;
                }
                var price = string.Format(new CultureInfo("vi-VN"), "{0:C}", item.Price);

                if (item.Dish.DishStatus == 0)
                {
                    <tr data-dishid="@item.DishId" data-cartId="@item.CartId">
                        <td><img id="image" src="@(image)" style="width:70px;" /></td>
                        <td>@Html.DisplayFor(modelItem => item.Dish.Name)</td>
                        <td>Out of stock</td>
                        <td></td>
                        <td></td>
                        <td id="price_@item.DishId"></td>
                        <td><a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.CartId">Delete</a></td>
                    </tr>
                }
                else
                {
                    <tr data-dishid="@item.DishId" data-cartId="@item.CartId">
                        <td><img id="image" src="@(image)" style="width:70px;" /></td>
                        <td>@Html.DisplayFor(modelItem => item.Dish.Name)</td>
                        <td>@price</td>
                        <td>
                            <button type="button" onclick="adjustQuantity('@item.DishId', 'down',this)" style="border-radius: 5px">-</button>
                            <input name="quantity" value="@item.Quantity" id="quantity_@item.DishId" class="quantity" style="border-radius: 5px" />
                            <button type="button" onclick="adjustQuantity('@item.DishId', 'up',this)" style="border-radius: 5px">+</button>
                        </td>
                        <td>
                            @{
                                var selectList = new SelectList(sizes, "Value", "Text", item.size);
                            }
                            <select asp-items="selectList" onchange="changeSize(@item.DishId,this,@item.CartId)" style="border-radius: 5px"></select>
                        </td>
                        <td id="price_@item.DishId">@price</td>
                        <td><a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.CartId"><i class="fa fa-trash"></i></a></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col-10"></div>
        <div class="col-2">
            <span style="font-weight: bold; padding-right:10px; margin-bottom: 15px;">Total:</span><span id="totalAmount">@totalFormat</span>
        </div>
    </div>
    <div class="row">
        <div class="col-10"></div>
        <div class="col-2">
            @{
                if (Model.Any())
                {
                    <a asp-action="Checkout" asp-controller="Orders" class="btn btn-primary">Check out</a>
                }
                else
                {
                    <button class="btn btn-primary" disabled>Check out</button>
                }
            }
        </div>
    </div>
</div>

<style>
    #image {
        width: 150px;
    }

    .quantity {
        width: 50px;
        text-align: center;
    }

    .cart-container {
        border-radius: 5px;
        padding: 20px;
        background-color: #f8f9fa;
    }
</style>

@section Scripts {
    <script>
        function changeSize(productId, ele, cartId) {
            var newSize = $(ele).val();
            console.log("productId:", productId);
            console.log("cartId:", cartId);

            // Log the generated selector
            var selector = 'tr[data-dishid=' + productId + '][data-cartId=' + cartId + ']';
            console.log("Selector:", selector);

            var col = $(selector);

            $.post(`/Carts/UpdateCartBySize?dishId=${productId}&size=${newSize}&cartID=${cartId}`, function (data) {
                console.log("Server response:", data);

                if (data.success) {
                    console.log("Removing element...");
                    if (data.cartReturn == 1) {
                        var quantityElement = $('#quantity_' + productId);
                        console.log("quantityElement", quantityElement);
                        console.log("updatedQuantity...", data.updatedQuantity);
                        quantityElement.html(data.updatedQuantity);
                        var priceElement = $('#price_' + productId);
                        priceElement.html(data.updatedPrice);
                        col.remove();
                    } else {
                        var priceElement = $('#price_' + productId);
                        priceElement.html(data.updatedPrice);
                    }
                    updateTotal();
                } else {
                    console.error('Update failed.');
                }
            });
        }

        function updateTotal() {
            $.get('/Carts/GetTotal', function (total) {
                $('#totalAmount').html(total);
            });
        }

        function adjustQuantity(productId, direction, ele) {
            var quantityElement = $('#quantity_' + productId);
            var currentQuantity = parseInt(quantityElement.val());

            if (direction === 'up') {
                quantityElement.val(currentQuantity + 1);
            } else if (direction === 'down' && currentQuantity > 1) {
                quantityElement.val(currentQuantity - 1);
            }

            updateCart(productId, quantityElement.val(), ele);
        }

        function updateCart(productId, newQuantity, ele) {
            var sizeElement = $(ele).closest('tr').find('select');
            var size = sizeElement.val();
            var url = '@Url.Action("UpdateCart", "Carts")';

            $.post(url, { dishId: productId, quantity: newQuantity, size: size }, function (data) {
                if (data.success) {
                    // Update the price on the client side
                    var priceElement = $('#price_' + productId);
                    priceElement.html(data.updatedPrice); // Display the price with 2 decimal places

                    // Update the total price after updating the cart
                    updateTotal();
                } else {
                    // Handle the case where the update was not successful
                    console.error('Update failed.');
                }
            });
        }

        $(document).ready(function () {
            updateTotal();
        });
    </script>
}
